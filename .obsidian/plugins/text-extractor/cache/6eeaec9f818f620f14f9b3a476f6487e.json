{"path":".obsidian/plugins/text-extractor/cache/pa/_attachments-Pasted image 20230209181411.png-6eeaec9f818f620f14f9b3a476f6487e.json","text":"| Quadtree Atree data structure most commonly used to index two-dimensional spatial data. Each node in a quadtree has either zero children nodes (and is therefore a leaf node) or exactly four children nodes. Typically, quadtree nodes contain some form of spatial data—for example, locations on a map—with a maximum capacity of some specified number n. So long as nodes aren't at capacity, they remain leaf nodes; once they reach capacity, they're given four children nodes, and their data entries are split across the four children nodes. A quadtree lends itself well to storing spatial data because it can be represented as a grid filled with rectangles that are recursively subdivided into four sub-rectangles, where each quadtree node is represented by a rectangle and each rectangle represents a spatial region. Assuming we're storing locations in the world, we can imagine a quadtree with a maximum node-capacity n as follows: « The root node, which represents the entire world, is the outermost rectangle. « Ifthe entire world has more than n locations, the outermost rectangle is divided into four quadrants, each representing a region of the world. « Solong as a region has more than n locations, its corresponding rectangle is subdivided into four quadrants (the corresponding node in the quadtree is given four children nodes). « Regions that have fewer than n locations are undivided rectangles (leaf nodes). « The parts of the grid that have many subdivided rectangles represent densely populated areas (like cities), while the parts of the grid that have few subdivided rectangles represent sparsely populated areas (like rural areas). Finding a given location in a perfect quadtree is an extremely fast operation that runs in loga(x) time (where x is the total number of locations), since quadtree nodes have four children nodes. | Google cloud storage % GCS is a blob storage service provided by Google. Learn more: https:/cloud.google.com/storage 2@ S3 s a blob storage service provided by Amazon through Amazon Web Services (AWS). Learn more: https://aws.amazon.com/s3/ | nfluxos % A popular open-source time series database. Learn more: httpsy//www.influxdata.com/ | prometheus % A popular open-source time series database, typically used for monitoring purposes. Learn more: https://prometheus.io/ | Neosj & A popular graph database that consists of nodes, relationships, properties, and labels. Learn more: https://neodj.com/","libVersion":"0.0.0","langs":"eng","hash":"","size":0}