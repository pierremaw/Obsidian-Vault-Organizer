{"path":".obsidian/plugins/text-extractor/cache/pa/_attachments-Pasted image 20230209182021.png-b82684dc7147cf40eefb9317e1a7c2c0.json","text":"Prerequisites 1 Availability The odds of a particular server or service being up and running at any point in time, usually measured in percentages. A server that has 99% availability will be operational 99% of the time (this would be described as having two nines of availability). I Latency The time it takes for a certain operation to complete in a system. Most often this measure is a time duration, like milliseconds or seconds. You should know these orders of magnitude: * Reading 1 MB from RAM: 250 ps (0.25 ms) * Reading 1 MB from SSD: 1,000 ys (1 ms) * Transfer 1 MB over Network: 10,000 ps (10 ms) * Reading 1MB from HDD: 20,000 ps (20 ms) * Inter-Continental Round Trip: 150,000 ps (150 ms) 1 Throughput The number of operations that a system can handle properly per time unit. For instance the throughput of a server can often be measured in requests per second (RPS or QPS). I Redundancy The process of replicating parts of a system in an effort to make it more reliable. | Databases Databases are programs that either use disk or memory to do 2 core things: record data and query data. In general, they are themselves servers that are long lived and interact with the rest of your application through network calls, with protocols on top of TCP or even HTTP. Some databases only keep records in memory, and the users of such databases are aware of the fact that those records may be lost forever if the machine or process dies. For the most part though, databases need persistence of those records, and thus cannot use memory. This means that you have to write your data to disk. Anything written to disk will remain through power loss or network partitions, so that's what is used to keep permanent records. Since machines die often in a large scale system, special disk partitions or volumes are used by the database processes, and those volumes can get recovered even if the machine were to go down permanently. I Reverse Proxy Aserver that sits between clients and servers and acts on behalf of the servers, typically used for logging, load balancing, or caching.","libVersion":"0.0.0","langs":"eng","hash":"","size":0}