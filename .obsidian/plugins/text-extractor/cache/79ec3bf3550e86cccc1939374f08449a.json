{"path":".obsidian/plugins/text-extractor/cache/re/_attachments-Relational Databases.png-79ec3bf3550e86cccc1939374f08449a.json","text":"Key Terms 1 Relational Database Atype of structured database in which data is stored following a tabular format; often supports powerful querying using SQL. 1 Non-Relational Database In contrast with relational database (SQL databases), a type of database that is free of imposed, tabular-like structure. Non-relational databases are often referred to as NoSQL databases. I sQL Structured Query Language. Relational databases can be used using a derivative of SQL such as PostgresQL in the case of Postgres. 1 SQL Database Any database that supports SQL. This term is often used synonymously with \"Relational Database\", though in practice, not everyrelational database supports SQL. | NoSQL Database Any database that is not SQL-compatible is called NoSQL. 1 ACID Transaction Atype of database transaction that has four important properties: * Atomicity: The operations that constitute the transaction will either all succeed or all fail. There is no in-between state. * Consistency: The transaction cannot bring the database to an invalid state. After the transaction is committed or rolled back, the rules for each record will still apply, and all future transactions will see the effect of the transaction. Also named Strong Consistency. « Isolation: The execution of multiple transactions concurrently will have the same effect as if they had been executed sequentially. « Durability: Any committed transaction is written to non-volatile storage. It will not be undone by a crash, power loss, or network partition. 1 Database Index A special auxiliary data structure that allows your database to perform certain queries much faster. Indexes can typically only exist to reference structured data, like data stored in relational databases. In practice, you create an index on one or multiple columns in your database to greatly speed up read queries that you run very often, with the downside of slightly longer writes to your database, since writes have to also take place in the relevant index. I Strong Consistency Strong Consistency usually refers to the consistency of ACID transactions, as opposed to Eventual Consistency. | Eventual Consistency A consistency model which is unlike Strong Consistency. In this model, reads might return a view of the system that is stale. An eventually consistent datastore will give guarantees that the state of the database will eventually reflect writes. within a time period (could be 10 seconds, or minutes). | Postgres % A relational database that uses a dialect of SQL called PostgreSQL. Provides ACID transactions. Learn more: https://www.postgresql.org/","libVersion":"0.0.0","langs":"eng","hash":"","size":0}